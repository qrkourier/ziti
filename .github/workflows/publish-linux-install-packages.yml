name: Publish Linux Install Packages

on:
  workflow_call:
    inputs:
      ziti-version:
        description: 'Tag or Branch Ref to Publish'
        type: string
        required: true

jobs:
  publish-linux-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package_name:
          - ziti-cli
        arch:
          - goreleaser: amd64
            gox: amd64
          - goreleaser: arm64
            gox: arm64
          - goreleaser: armv7
            gox: arm
        nfpm_packager:
          - rpm
          - deb
          # - archlinux
          # - apk
    env:
      ZITI_VERSION: ${{ inputs.ziti-version || github.event.inputs.ziti-version }}
      ZITI_MAINTAINER: "OpenZiti Maintainers <ziggy@openziti.io>"
      ZITI_HOMEPAGE: "https://openziti.io"
      ZITI_VENDOR: "NetFoundry"
      GOARCH: ${{ matrix.arch.goreleaser }}
    steps:
      - name: Checkout Workspace
        uses: actions/checkout@v3

      - name: Download Linux Release Artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-release-${{ github.run_id }}
          path: release/

      - run: mv -v ./release/${{ matrix.arch.gox }}/linux/ziti ./release/ziti

      - name: Build Package
        id: nfpm
        # uses: burningalchemist/action-gh-nfpm@v1
        uses: netfoundry/action-gh-nfpm@main
        with:
          nfpm_version: "2.32.0"
          packager: ${{ matrix.nfpm_packager }}
          config: .github/nfpm-configs/nfpm-linux-${{ matrix.package_name }}.yaml
          target: release/

      - name: get the package name from the output
        run: echo ${{ steps.nfpm.outputs.package }}
        shell: bash

      - run: ls -lh release/

      # - name: upload package artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ matrix.distro.name }}-${{ matrix.distro.version }}-${{ matrix.arch.rpm }}-${{ matrix.distro.type }}
      #     path: ./build/ziti-edge-tunnel-*.${{ matrix.distro.type }}
      #     if-no-files-found: error

      # - name: Configure jFrog CLI
      #   if: ${{ github.event.release.published && startsWith(github.ref, 'refs/tags/v') }}
      #   uses: jfrog/setup-jfrog-cli@v3
      #   env:
      #     JF_ENV_1: ${{ secrets.ZITI_ARTIFACTORY_CLI_CONFIG_PACKAGE_UPLOAD }}

      # - name: Upload RPM to Artifactory with jFrog CLI
      #   if: ${{ github.event.release.published && startsWith(github.ref, 'refs/tags/v') && matrix.distro.name == 'redhat' }}
      #   run: >
      #     jf rt upload
      #     ./build/ziti-edge-tunnel-*.${{ matrix.distro.type }}
      #     /zitipax-openziti-rpm-stable/redhat${{ matrix.distro.version }}/${{ matrix.arch.rpm }}/
      #     --recursive=false
      #     --flat=true 

      # - name: Upload DEB to Artifactory with jFrog CLI
      #   if: ${{ github.event.release.published && startsWith(github.ref, 'refs/tags/v') && matrix.distro.name == 'ubuntu' }}
      #   run: >
      #     jf rt upload
      #     ./build/ziti-edge-tunnel-*.${{ matrix.distro.type }}
      #     /zitipax-openziti-deb-stable/pool/ziti-edge-tunnel/${{ matrix.distro.release_name }}/${{ matrix.arch.deb }}/
      #     --deb=${{ matrix.distro.release_name }}/main/${{ matrix.arch.deb }}
      #     --recursive=false
      #     --flat=true 
