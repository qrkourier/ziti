on:
  pull_request_target:
    types:
      - closed
    branches:
      - main
      - release-v*.*.x
      - release-next

jobs:
  release-quickstart:
    if: |
      github.event.pull_request.merged == true
      && contains(github.event.pull_request.labels.*.name, 'quickstartrelease')
    runs-on: ubuntu-latest
    env:
      ZITI_QUICKSTART_TAG:   ${{ inputs.ziti-quickstart-version || github.event.inputs.ziti-quickstart-version }}
      ZITI_QUICKSTART_IMAGE: ${{ vars.ZITI_QUICKSTART_IMAGE || 'docker.io/openziti/quickstart' }}
    steps:
      - name: Debug action
        uses: hmarr/debug-action@v2.1.0

      - name: Checkout Workspace
        uses: actions/checkout@v3

      - name: Install Ziti CI
        uses: openziti/ziti-ci@v1

      - name: Compute the Ziti Quickstart Version String
        id: get_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
        run: |
          ZITI_VERSION="$($(go env GOPATH)/bin/ziti-ci -q get-current-version)"
          # drop the leading 'v', if any
          ZITI_VERSION=${ZITI_VERSION#v}
          if ! [[ "${ZITI_VERSION}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # fail the job because we could not obtain the current version from ziti-ci
            echo "ERROR: ZITI_VERSION=${ZITI_VERSION} is not a semver"
            exit 1
          elif [[ "${GITHUB_REF}" =~ ^refs/heads/(release-v[0-9]+\.[0-9]+\.x|main)$ ]]; then
            # Set output parameters for release branches
            echo "DEBUG: ZITI_VERSION=${ZITI_VERSION}"
            echo ZITI_VERSION="${ZITI_VERSION}" >> $GITHUB_OUTPUT
          else
            # Append short sha for non-release refs to identify Jenkins smoketest runs and quickstart docker images
            # shipped from release-next
            ZITI_VERSION="${ZITI_VERSION}-$(git rev-parse --short ${GITHUB_SHA})"
            echo "DEBUG: ZITI_VERSION=${ZITI_VERSION}"
            echo ZITI_VERSION="${ZITI_VERSION}" >> $GITHUB_OUTPUT
          fi

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64

      - name: Set Up Docker BuildKit
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          # it is preferable to obtain the username from a var so that
          # recurrences of the same string are not masked in CI output
          username: ${{ vars.DOCKER_HUB_API_USER || secrets.DOCKER_HUB_API_USER }}
          password: ${{ secrets.DOCKER_HUB_API_TOKEN }}

      # This container differs in that :latest is pushed from branch release-next in addition to main and hotfix
      # branches like releasev1.2.x. See https://github.com/openziti/ziti/issues/898
      - name: Configure Quickstart Container
        env:
          IMAGE_REPO: ${{ env.ZITI_QUICKSTART_IMAGE }}
          IMAGE_TAG: ${{ env.ZITI_QUICKSTART_TAG }}
        id: tagprep_qs
        run: |
          DOCKER_TAGS=""
          DOCKER_TAGS="${IMAGE_REPO}:${IMAGE_TAG}"
          if [[ "${{ github.ref }}" =~ ^refs/heads/(release-(next|v[0-9]+\.[0-9]+\.x)|main)$ ]]; then
            DOCKER_TAGS+=",${IMAGE_REPO}:latest"
          fi
          echo "DEBUG: DOCKER_TAGS=${DOCKER_TAGS}"
          echo DOCKER_TAGS="${DOCKER_TAGS}" >> $GITHUB_OUTPUT

          # configure the env var used by the quickstart's Dockerfile to download the correct version of ziti for the
          # target architecture of each image build by trimming the hyphenated short sha suffix so that the preceding
          # release version of the ziti executable is installed in the quickstart container image
          ZITI_OVERRIDE_VERSION=${IMAGE_TAG%-*}
          echo "DEBUG: ZITI_OVERRIDE_VERSION=${ZITI_OVERRIDE_VERSION}"
          echo ZITI_OVERRIDE_VERSION="${ZITI_OVERRIDE_VERSION}" >> $GITHUB_OUTPUT

      - name: Build & Push Multi-Platform Quickstart Container Image to Hub
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ github.workspace }}/quickstart/docker/image
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tagprep_qs.outputs.DOCKER_TAGS }}
          build-args: |
            ZITI_VERSION_OVERRIDE=${{ env.ZITI_VERSION_OVERRIDE }}
          push: true

      - name: Manage Quickstart Latest Tag
        uses: julbme/gh-action-manage-tag@v1
        with:
          name: quickstart-latest
          state: present
          from: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
