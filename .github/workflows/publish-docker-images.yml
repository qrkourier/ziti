name: Publish Docker Images

on:
  workflow_call:
    inputs:
      ziti-version:
        description: 'Tag or Branch Ref to Publish'
        type: string
        required: true

jobs:
  publish-docker-images:
    runs-on: ubuntu-latest
    env:
      ZITI_VERSION: ${{ inputs.ziti-version || github.event.inputs.ziti-version }}
    steps:
      - name: Checkout Workspace
        uses: actions/checkout@v3

      - name: Download Linux Release Artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-release-${{ github.run_id }}
          path: release/

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64

      - name: Set Up Docker BuildKit
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_API_USER }}
          password: ${{ secrets.DOCKER_HUB_API_TOKEN }}

      - name: Set Up Container Image Tags for Base CLI Container
        env:
          RELEASE_REPO: kbinghamnetfoundry/ziti-cli
        id: tagprep_cli
        run: |
          DOCKER_TAGS=""
          DOCKER_TAGS="${RELEASE_REPO}:${ZITI_VERSION#refs/heads/}
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            DOCKER_TAGS+=",${RELEASE_REPO}:latest"
          fi
          echo "DEBUG: DOCKER_TAGS=${DOCKER_TAGS}"
          echo DOCKER_TAGS="${DOCKER_TAGS}" >> $GITHUB_OUTPUT

      # this is the base image into which is stuffed the Linux binary for each
      # arch that was downloaded in ./release/, hence the need to specify the
      # Dockerfile and DOCKER_BUILD_DIR
      - name: Build & Push Multi-Platform CLI Container Image to Hub
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ github.workspace }}/
          file: ${{ github.workspace }}/docker-images/ziti-cli/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tagprep_cli.outputs.DOCKER_TAGS }}
          build-args: |
            DOCKER_BUILD_DIR=./docker-images/ziti-cli
          push: true

      - name: Set Up Container Image Tags for Controller Container
        env:
          RELEASE_REPO: kbinghamnetfoundry/ziti-controller
        id: tagprep_ctrl
        run: |
          DOCKER_TAGS=""
          DOCKER_TAGS="${RELEASE_REPO}:${ZITI_VERSION#refs/heads/}
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            DOCKER_TAGS+=",${RELEASE_REPO}:latest"
          fi
          echo "DEBUG: DOCKER_TAGS=${DOCKER_TAGS}"
          echo DOCKER_TAGS="${DOCKER_TAGS}" >> $GITHUB_OUTPUT

      # This is a use-case image based on the minimal CLI image. It needs the
      # ZITI_VERSION env var so it can build from the versioned image that
      # we pushed in the prior step.
      - name: Build & Push Multi-Platform Controller Container Image to Hub
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ github.workspace }}/docker-images/ziti-controller/
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tagprep_ctrl.outputs.DOCKER_TAGS }}
          build-args: |
            ZITI_VERSION=${{ env.ZITI_VERSION }}
          push: true

      - name: Set Up Container Image Tags for Router Container
        env:
          RELEASE_REPO: kbinghamnetfoundry/ziti-router
        id: tagprep_router
        run: |
          DOCKER_TAGS=""
          DOCKER_TAGS="${RELEASE_REPO}:${ZITI_VERSION#refs/heads/}
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            DOCKER_TAGS+=",${RELEASE_REPO}:latest"
          fi
          echo "DEBUG: DOCKER_TAGS=${DOCKER_TAGS}"
          echo DOCKER_TAGS="${DOCKER_TAGS}" >> $GITHUB_OUTPUT

      - name: Build & Push Multi-Platform Router Container Image to Hub
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ github.workspace }}/docker-images/ziti-router/
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tagprep_router.outputs.DOCKER_TAGS }}
          build-args: |
            ZITI_VERSION=${{ env.ZITI_VERSION }}
          push: true

      - name: Set Up Container Image Tags for Go Tunneler Container
        env:
          #SNAPSHOT_REPO: netfoundry/ziti-tunnel
          RELEASE_REPO: kbinghamnetfoundry/ziti-tunnel
        id: tagprep_tun
        run: |
          DOCKER_TAGS=""
          for REPO in ${SNAPSHOT_REPO} ${RELEASE_REPO}; do
            DOCKER_TAGS="${RELEASE_REPO}:${ZITI_VERSION#refs/heads/}
            if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              DOCKER_TAGS+=",${RELEASE_REPO}:latest"
            fi
          done
          DOCKER_TAGS=${DOCKER_TAGS#,} # drop leading comma char
          echo "DEBUG: DOCKER_TAGS=${DOCKER_TAGS}"
          echo DOCKER_TAGS="${DOCKER_TAGS}" >> $GITHUB_OUTPUT

      - name: Build & Push Multi-Platform Go Tunneler Container Image to Hub
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ github.workspace }}/docker-images/ziti-tunnel/
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tagprep_tun.outputs.DOCKER_TAGS }}
          build-args: |
            ZITI_VERSION=${{ env.ZITI_VERSION }}
          push: true
