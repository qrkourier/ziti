[Unit]
Description=OpenZiti Controller
After=network-online.target

[Service]

#
## Required Configuration
#

# you must set the admin password to bootstrap the database; the bootstrapping script will initialize the default admin
# username and password by loading the password from a file or env var; for security, set permissions to allow read only
# by root only and remove the file after the bootstrapping that occurs on the first run
# LoadCredential=ZITI_PWD:/opt/openziti/etc/controller/.pwd
# alternatively to the .pwd file, temporarily set ZITI_PWD in /opt/openziti/etc/controller/env or this file with
# SetCredential and exec "systemctl daemon-reload", e.g.:
# SetCredential=ZITI_PWD:<password as a literal string here>

# you must set the advertised address (FQDN) of the controller; you may specify the domain name as a literal string here
# and exec "systemctl daemon-reload" or in /opt/openziti/etc/controller/env (no daemon-reload required)
Environment=ZITI_CTRL_ADVERTISED_ADDRESS=
# Environment=ZITI_CTRL_ADVERTISED_ADDRESS=ziti.example.com

#
## Optional Permissions
#

# allow binding low ports, e.g., 443/tcp; NOTE: use TLS passthrough if fronting with a reverse proxy, i.e., "raw" TCP
# proxy
# AmbientCapabilities=CAP_NET_BIND_SERVICE

#
##
#

# manage the user and permissions for the service automatically
DynamicUser=yes
EnvironmentFile=/opt/openziti/etc/controller/env
# used by bootstrap.bash to look up /run/credentials/$UNIT_NAME/$CREDENTIAL_NAME
Environment=UNIT_NAME=ziti-controller.service
# BASH script that defines function bootstrap()
Environment=ZITI_CTRL_BOOTSTRAP_BASH=/opt/openziti/etc/controller/bootstrap.bash
# disable JSON logging during bootstrapping
Environment=PFXLOG_NO_JSON=true
# create a new PKI unless it exists
Environment=ZITI_BOOTSTRAP_PKI=true
# create a config file unless it exists if "true", set "force" to overwrite (changing the advertised URI will break
# existing enrollments who will be unable to connect to the controller)
Environment=ZITI_BOOTSTRAP_CONFIG=true
# create a new database unless it exists
Environment=ZITI_BOOTSTRAP_DATABASE=true
# renew server and client certificates every startup
Environment=ZITI_AUTO_RENEW_CERTS=true
# basename of identity files to generate in state dir
Environment=ZITI_NETWORK_NAME=ctrl
# create a new config file relative to working directory unless it exists
# absolute path where service will be run
ExecStart=/opt/openziti/etc/controller/entrypoint.bash run config.yml
LimitNOFILE=65535
Restart=always
RestartSec=3
# relative to /var/lib
StateDirectory=ziti-controller
#:/opt/openziti/etc/controller/state
# "ziti controller run" is the main process managed by this service and replaces entrypoint.bash
Type=simple
UMask=0007
WorkingDirectory=/var/lib/ziti-controller

[Install]
WantedBy=multi-user.target
